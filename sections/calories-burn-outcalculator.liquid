{% schema %}
  {
    "name": "Calories-Burned-Calc",
    "settings": [],
    "presets": [
      {
        "name": "Calories Burned Calc"
      }
    ]
  }
{% endschema %}
<style>
    @media (min-width: 768px){
        .calories-burn-calc-body{
           min-height: 100vh;
        }
    }
  .calories-burn-calc-body {
    font-family: 'Arial', sans-serif;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #333;
    flex-direction: column;
  }

  .calories-burn-calc-calculator-container {
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 30px;
    width: 100%;
    max-width: 500px;
    position: relative;
  }

  .calories-burn-calc-calculator-container h1 {
    color: #2c3e50;
    text-align: center;
    margin-bottom: 30px;
    line-height: 1.1;
    font-size: 24px;
  }

  .calories-burn-calc-input-group {
    margin-bottom: 20px;
  }

  .calories-burn-calc-input-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: bold;
  }

  .calories-burn-calc-input-group select,
  .calories-burn-calc-input-group input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 16px;
  }

  .calories-burn-calc-input-group input {
    box-sizing: border-box;
  }

  .calories-burn-calc-duration-container {
    display: flex;
    gap: 10px;
  }

  .calories-burn-calc-duration-container > div {
    flex: 1;
  }

  .calories-burn-calc-button {
    background-color: #086b92;
    color: white;
    border: none;
    padding: 12px 20px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    width: 100%;
    transition: background-color 0.3s;
    margin-top: 10px;
  }

  .calories-burn-calc-button:hover {
    background-color: #086b92;
  }

  .calories-burn-calc-result-container {
    margin-top: 30px;
    padding: 20px;
    background-color: #f8f9fa;
    border-radius: 5px;
    width: 100%;
    box-sizing: border-box;
  }

  .calories-burn-calc-result-container h2 {
    color: #2c3e50;
    margin-top: 0;
    text-align: center;
  }

  .calories-burn-calc-result-value {
    font-size: 32px;
    font-weight: bold;
    color: #e74c3c;
    margin: 15px 0;
    text-align: center;
  }

  .calories-burn-calc-result-category {
    font-size: 24px;
    font-weight: bold;
    color: #086b92;
    margin: 15px 0;
    text-align: center;
  }

  .calories-burn-calc-suggestion {
    background-color: #e8f4fc;
    padding: 15px;
    border-radius: 5px;
    margin-top: 20px;
    border-left: 4px solid #086b92;
    max-width: 1000px;
    margin-left: auto;
    margin-right: auto;
  }

  .calories-burn-calc-suggestion h3 {
    margin-top: 0;
    color: #2c3e50;
  }

  .calories-burn-calc-comparison {
    display: flex;
    justify-content: space-around;
    margin-top: 15px;
    text-align: center;
  }

  .calories-burn-calc-comparison-item {
    flex: 1;
    padding: 10px;
  }

  .calories-burn-calc-comparison-value {
    font-weight: bold;
    color: #2c3e50;
  }

  @media (max-width: 760px){
    .calories-burn-calc-calculator-container{
      padding: 10px;
    }

    .calories-burn-calc-calculator-container h1{
      font-size: 24px;
    }
    
    .calories-burn-calc-result-value {
      font-size: 28px;
    }
    
    .calories-burn-calc-result-category {
      font-size: 20px;
    }
  }

  /* Popup styles */
  .calories-burn-calc-popup-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .calories-burn-calc-popup-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .calories-burn-calc-popup {
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
    width: 90%;
    max-width: 500px;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    padding: 30px;
    transform: translateY(20px);
    transition: transform 0.3s ease;
  }

  .calories-burn-calc-popup-overlay.active .calories-burn-calc-popup {
    transform: translateY(0);
  }

  .calories-burn-calc-popup-close {
    position: absolute;
    top: 15px;
    right: 15px;
    width: 30px;
    height: 30px;
    background: none;
    border: none;
    font-size: 30px;
    cursor: pointer;
    color: red;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    transition: all 0.2s;
    z-index: 10;
  }

  .calories-burn-calc-popup-close:hover {
    color: #333;
    background-color: #f5f5f5;
  }

  .calories-burn-calc-popup-content {
    margin-top: 20px;
  }

  /* Klaviyo form styles */
  .calories-burn-calc-klaviyo-form {
    /* margin: 20px 0; */
    padding-bottom: 20px;
  }

  .klaviyo-form-T6BNnH {
    width: 100%;
  }

  /* Klaviyo submit button styles */
  .klaviyo-submit-button {
    background: rgb(22, 109, 148) !important;
    border-radius: 6px !important;
    border-style: solid !important;
    border-color: rgb(194, 194, 194) !important;
    border-width: 2px !important;
    color: rgb(255, 255, 255) !important;
    font-family: Nunito-Sans-Klaviyo-Hosted, Arial, "Helvetica Neue", Helvetica, sans-serif !important;
    font-size: 14px !important;
    font-weight: 700 !important;
    letter-spacing: 0px !important;
    line-height: 1 !important;
    font-style: normal !important;
    white-space: normal !important;
    padding: 0px 10px !important;
    text-align: center !important;
    word-break: break-word !important;
    align-self: flex-end !important;
    cursor: pointer !important;
    pointer-events: auto !important;
    height: 40px !important;
    width: 100% !important;
    margin-top: 10px !important;
  }

  .calories-burn-calc-popup-title {
    color: #2c3e50;
    text-align: center;
    margin-bottom: 20px;
  }
</style>

<section class="calories-burn-calc-body">
  <div class="calories-burn-calc-calculator-container">
    <h1>Calories Burned Calculator</h1>

    <div class="calories-burn-calc-input-group">
      <label for="calories-burn-calc-activity">Activity:</label>
      <select id="calories-burn-calc-activity">
        <option value="running">Running</option>
        <option value="walking">Walking</option>
        <option value="cycling">Cycling</option>
        <option value="swimming">Swimming</option>
        <option value="weightlifting">Weightlifting</option>
        <option value="yoga">Yoga</option>
        <option value="basketball">Basketball</option>
        <option value="tennis">Tennis</option>
      </select>
    </div>

    <div class="calories-burn-calc-input-group">
      <label>Duration:</label>
      <div class="calories-burn-calc-duration-container">
        <div>
          <label for="calories-burn-calc-hours">Hours</label>
          <input
            type="number"
            id="calories-burn-calc-hours"
            min="0"
            max="24"
            value="0">
        </div>
        <div>
          <label for="calories-burn-calc-minutes">Minutes</label>
          <input
            type="number"
            id="calories-burn-calc-minutes"
            min="0"
            max="59"
            value="30">
        </div>
      </div>
    </div>

    <div class="calories-burn-calc-input-group">
      <label for="calories-burn-calc-weight">Your Weight (kg):</label>
      <input
        type="number"
        id="calories-burn-calc-weight"
        min="30"
        value="70">
    </div>

    <div class="calories-burn-calc-input-group">
      <label for="calories-burn-calc-intensity">Intensity:</label>
      <select id="calories-burn-calc-intensity">
        <option value="light">Light</option>
        <option value="moderate" selected>Moderate</option>
        <option value="vigorous">Vigorous</option>
      </select>
    </div>

    <button id="calories-burn-calc-calculate-btn" class="calories-burn-calc-button">Calculate Calories Burned</button>
  </div>

  <div
    id="calories-burn-calc-result"
    class="calories-burn-calc-result-container"
    style="display: none;">
    <h2>Your Results</h2>
    <div class="calories-burn-calc-result-value" id="calories-burn-calc-calories-result">0 calories</div>
    <div class="calories-burn-calc-result-category" id="calories-burn-calc-intensity-level">Intensity Level</div>

    <div class="calories-burn-calc-comparison">
      <div class="calories-burn-calc-comparison-item">
        <div class="calories-burn-calc-comparison-value" id="calories-burn-calc-equivalent-food"></div>
        <div>Equivalent to</div>
      </div>
      <div class="calories-burn-calc-comparison-item">
        <div class="calories-burn-calc-comparison-value" id="calories-burn-calc-walking-equivalent"></div>
        <div>Minutes of walking</div>
      </div>
    </div>

    <div class="calories-burn-calc-suggestion" id="calories-burn-calc-suggestion">
      <h3>Fitness Tip</h3>
      <p id="calories-burn-calc-suggestion-text"></p>
    </div>
  </div>
</section>

<!-- Popup HTML - Only contains Klaviyo form -->
<div class="calories-burn-calc-popup-overlay" id="calories-burn-calc-popup">
  <div class="calories-burn-calc-popup">
    <button class="calories-burn-calc-popup-close" id="calories-burn-calc-popup-close">&times;</button>
    <h2 class="calories-burn-calc-popup-title">Get Your Full Fitness Analysis</h2>
    <div class="calories-burn-calc-popup-content">
      <!-- Only Klaviyo form in popup -->
      <div class="calories-burn-calc-klaviyo-form">
        <div class="klaviyo-form-RrDsq5"></div>
      </div>
    </div>
  </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const calculateBtn = document.getElementById('calories-burn-calc-calculate-btn');
        const resultElement = document.getElementById('calories-burn-calc-result');
        const caloriesResult = document.getElementById('calories-burn-calc-calories-result');
        const intensityLevel = document.getElementById('calories-burn-calc-intensity-level');
        const suggestionText = document.getElementById('calories-burn-calc-suggestion-text');
        const equivalentFood = document.getElementById('calories-burn-calc-equivalent-food');
        const walkingEquivalent = document.getElementById('calories-burn-calc-walking-equivalent');
        
        // Popup elements
        const popup = document.getElementById('calories-burn-calc-popup');
        const popupClose = document.getElementById('calories-burn-calc-popup-close');
        
        // Store the calculated calories
        let calculatedCalories = 0;
        let calculatedActivity = '';
        let calculatedIntensity = '';

        // MET values for different activities and intensities
        const metValues = {
            running: { light: 6, moderate: 8, vigorous: 10 },
            walking: { light: 2.5, moderate: 3.5, vigorous: 4.5 },
            cycling: { light: 4, moderate: 6, vigorous: 8 },
            swimming: { light: 5, moderate: 7, vigorous: 9 },
            weightlifting: { light: 3, moderate: 5, vigorous: 7 },
            yoga: { light: 2, moderate: 3, vigorous: 4 },
            basketball: { light: 5, moderate: 7, vigorous: 9 },
            tennis: { light: 5, moderate: 7, vigorous: 9 }
        };

        // Food equivalents (calories per item)
        const foodEquivalents = [
            { name: "apple", calories: 95 },
            { name: "banana", calories: 105 },
            { name: "slice of pizza", calories: 285 },
            { name: "chocolate bar", calories: 250 },
            { name: "can of soda", calories: 150 }
        ];

        // Close popup when clicking the close button
        popupClose.addEventListener('click', function() {
            popup.classList.remove('active');
            // Show the regular result container after closing popup
            displayResult(calculatedCalories, calculatedActivity, calculatedIntensity);
        });

        // Close popup when clicking outside of it
        popup.addEventListener('click', function(e) {
            if (e.target === popup) {
                popup.classList.remove('active');
                // Show the regular result container after closing popup
                displayResult(calculatedCalories, calculatedActivity, calculatedIntensity);
            }
        });

        // Function to handle Klaviyo button clicks
        function handleKlaviyoButtonClick(e) {
            // Check if the clicked element is the Klaviyo submit button
            const klaviyoButton = e.target.closest('.go3265039304');
            if (klaviyoButton && popup.classList.contains('active')) {
                // Close the popup
                popup.classList.remove('active');
                // Show the regular result container
                displayResult(calculatedCalories, calculatedActivity, calculatedIntensity);
            }
        }

        // Set up event listener for Klaviyo button
        document.addEventListener('click', handleKlaviyoButtonClick);

        calculateBtn.addEventListener('click', function() {
            // Get input values
            const activity = document.getElementById('calories-burn-calc-activity').value;
            const hours = parseFloat(document.getElementById('calories-burn-calc-hours').value) || 0;
            const minutes = parseFloat(document.getElementById('calories-burn-calc-minutes').value) || 0;
            const weight = parseFloat(document.getElementById('calories-burn-calc-weight').value);
            const intensity = document.getElementById('calories-burn-calc-intensity').value;

            // Calculate total duration in minutes
            const durationMinutes = (hours * 60) + minutes;

            // Validate inputs
            if (durationMinutes <= 0) {
                alert('Please enter a valid duration');
                return;
            }

            if (isNaN(weight) || weight <= 0) {
                alert('Please enter a valid weight');
                return;
            }

            // Calculate calories burned
            const met = metValues[activity][intensity];
            const calories = calculateCaloriesBurned(met, weight, durationMinutes);

            // Store the calculated values
            calculatedCalories = calories;
            calculatedActivity = activity;
            calculatedIntensity = intensity;

            // Show the popup with Klaviyo form
            popup.classList.add('active');
            
            // Hide the regular result container initially
            resultElement.style.display = 'none';
        });

        function calculateCaloriesBurned(met, weightKg, durationMinutes) {
            // Formula: Calories = MET * weight in kg * time in hours
            return met * weightKg * (durationMinutes / 60);
        }

        function displayResult(calories, activity, intensity) {
            // Update the result display
            caloriesResult.textContent = `${calories.toFixed(0)} calories burned`;
            
            // Set intensity level text
            const intensityText = intensity.charAt(0).toUpperCase() + intensity.slice(1);
            intensityLevel.textContent = `${intensityText} Intensity`;
            
            // Generate suggestions
            generateSuggestions(calories, activity, intensity);
            
            // Show food equivalent
            showFoodEquivalent(calories);
            
            // Show walking equivalent
            const weight = parseFloat(document.getElementById('calories-burn-calc-weight').value);
            showWalkingEquivalent(calories, weight);
            
            // Show the result container
            resultElement.style.display = 'block';
            resultElement.scrollIntoView({ behavior: 'smooth' });
        }

        function generateSuggestions(calories, activity, intensity) {
            let suggestion = "";
            
            if (intensity === 'light') {
                suggestion = "This is a light workout. Great for recovery days or beginners. Consider increasing intensity gradually as you build endurance.";
            } else if (intensity === 'moderate') {
                suggestion = "Good moderate workout! This intensity is excellent for maintaining fitness and burning calories consistently.";
            } else {
                suggestion = "Vigorous workout! You're pushing your limits. Make sure to balance these with recovery days to prevent overtraining.";
            }
            
            // Activity-specific tips
            if (activity === 'running' && intensity === 'vigorous') {
                suggestion += " For running at this intensity, proper running form and footwear are crucial to prevent injuries.";
            } else if (activity === 'weightlifting') {
                suggestion += " Remember that weight training builds muscle which boosts metabolism long-term, even when you're not exercising.";
            } else if (activity === 'swimming') {
                suggestion += " Swimming is excellent low-impact exercise. Consider varying your strokes to work different muscle groups.";
            }
            
            suggestionText.textContent = suggestion;
        }

        function showFoodEquivalent(calories) {
            // Find the closest food match
            let closestFood = foodEquivalents[0];
            let smallestDiff = Math.abs(calories - closestFood.calories);
            
            for (const food of foodEquivalents) {
                const diff = Math.abs(calories - food.calories);
                if (diff < smallestDiff) {
                    smallestDiff = diff;
                    closestFood = food;
                }
            }
            
            const equivalentAmount = (calories / closestFood.calories).toFixed(1);
            equivalentFood.textContent = `${equivalentAmount} ${closestFood.name}${equivalentAmount > 1 ? 's' : ''}`;
        }

        function showWalkingEquivalent(calories, weight) {
            // Calculate how many minutes of walking would burn the same calories
            const met = metValues.walking.moderate;
            const minutes = (calories * 60) / (met * weight);
            walkingEquivalent.textContent = `${minutes.toFixed(0)} min`;
        }
    });
</script>