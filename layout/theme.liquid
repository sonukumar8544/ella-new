{% include 'shogun-content-handler' %}
{% unless template contains 'index' or template contains 'collection' or template contains 'product' -%}
  {%- include 'shogun-content-handler' -%}
{%- endunless %}
<!doctype html>
{%- liquid
  if settings.list_iso_rtl != blank
    assign locale_iso_code = request.locale.iso_code
    assign arr_list_rtl = settings.list_iso_rtl | remove: ' ' | split: ','
    if arr_list_rtl contains locale_iso_code
      assign enable_iso_rtl = true
    else
      assign enable_iso_rtl = false
    endif
  else
    assign enable_iso_rtl = false
  endif
-%}
<html
  class="no-js"
  lang="{{ request.locale.iso_code }}"
  {% if settings.enable_layout_rtl and enable_iso_rtl %}
    dir="rtl"
  {% endif %}
>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">

    <script type="text/javascript"> (function(funnel) {var deferredEvents = [];window.funnelytics = {events: {trigger: function (name, attributes, callback, opts) {deferredEvents.push({name: name, attributes: attributes, callback: callback, opts: opts});}}};var insert = document.getElementsByTagName('script')[0],script = document.createElement('script');script.addEventListener('load', function() {window.funnelytics.init(funnel, false, deferredEvents, {"anonymiseUsers":false});});script.src = 'https://cdn.funnelytics.io/track-v3.js';script.type = 'text/javascript';script.async = true;insert.parentNode.insertBefore(script, insert);})('0cc5c89e-292b-43be-a6cb-42d74b1602ac'); </script>

    <link rel="canonical" href="{{ canonical_url }}" canonical-shop-url="{{ shop.url }}/">
    {%- if settings.favicon != blank -%}
      <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
    {%- endif -%}
    <!-- Shogun -->
    {% render 'shogun-header-script' %}
    <!-- Shogun -->

    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {% comment %} {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%} {% endcomment %}
    </title>
    {% if request.path contains '/pages/molecular-hydrogen'
      or request.path contains '/pages/testosterone'
      or request.path contains 'pages/statin'
      or request.path contains 'pages/nafld'
      or request.path contains 'pages/gut-health'
    %}
      <meta name="robots" content="noindex, nofollow">
    {% endif %}

    {%- if page_description -%}
      <meta name="description" content="{{ page_description | escape }}">
    {%- endif -%}
    {% render 'meta-tags' %}
    {% render 'seo_script' %}
    <!-- Google Tag Manager -->
    <script>
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
              new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
              j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
              'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
              })(window,document,'script','dataLayer','GTM-W3L597KW');
    </script>
    <!-- End Google Tag Manager -->

    <!-- Start of HubSpot Embed Code -->
    <script>
        var navigatortt = navigator.userAgent;

      if (
        navigatortt.indexOf(
          'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36'
        ) > -2
      ) {
        var hsScript = document.createElement('script');
          hsScript.type = 'text/javascript';
          hsScript.id = 'hs-script-loader';
          hsScript.async = true;
          hsScript.defer = true;
          hsScript.src = 'https://js.hs-scripts.com/49007533.js';
          document.head.appendChild(hsScript);
      }
    </script>
    {% comment %}
      <script type="text/javascript" id="hs-script-loader" async defer src="//js.hs-scripts.com/49007533.js"></script>
    {% endcomment %}
    <!-- End of HubSpot Embed Code -->

    {{ content_for_header }}
    {% unless template contains 'index' or template contains 'collection' %}
      <link href="{{ 'custom_okendo.css' | asset_url }}" rel="stylesheet" type="text/css">
    {% endunless %}

    {% render 'variable' %}
    {% render 'global-style' %}
    {% render 'global-script' %}

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    </script>

    {%- liquid
      if settings.layout_body == 'full'
        assign layout_body = 'body-full-width'
      elsif settings.layout_body == 'boxed'
        assign layout_body = 'body-boxed'
      elsif settings.layout_body == 'custom_width'
        assign layout_body = 'body-custom-width'
      endif

      if settings.style_dots == '02'
        assign style_dots = 'style-dots-2'
      endif

      if settings.style_arrows == '02'
        assign style_arrows = 'style-arrows-2'
      elsif settings.style_arrows == '05'
        assign style_arrows = 'style-arrows-5'
      elsif settings.style_arrows == '06'
        assign style_arrows = 'style-arrows-6'
      elsif settings.style_arrows == '07'
        assign style_arrows = 'style-arrows-7'
      elsif settings.style_arrows == '08'
        assign style_arrows = 'style-arrows-8'
      elsif settings.style_arrows == '09'
        assign style_arrows = 'style-arrows-9'
      elsif settings.style_arrows == '10'
        assign style_arrows = 'style-arrows-10'
      endif

      if settings.product_card_layout == '02'
        if settings.enable_infor_on_image
          assign product_card_layout = 'product-card-layout-02 enable_infor_on_image'
        else
          assign product_card_layout = 'product-card-layout-02'
        endif
      elsif settings.product_card_layout == '03'
        assign product_card_layout = 'product-card-layout-03'
      elsif settings.product_card_layout == '04'
        assign product_card_layout = 'product-card-layout-04'
      elsif settings.product_card_layout == '05'
        assign product_card_layout = 'product-card-layout-05'
      elsif settings.product_card_layout == '06'
        assign product_card_layout = 'product-card-layout-06'
      elsif settings.product_card_layout == '07'
        assign product_card_layout = 'product-card-layout-07'
      elsif settings.product_card_layout == '08'
        assign product_card_layout = 'product-card-layout-08'
      else
        assign product_card_layout = 'product-card-layout-01'
      endif

      case settings.quick_shop_type
        when '1'
          assign quick_shop_type = 'quick_shop_option_1'
        when '2'
          assign quick_shop_type = 'quick_shop_option_2'
        when '3'
          assign quick_shop_type = 'quick_shop_option_3'
        when '4'
          assign quick_shop_type = 'quick_shop_bulk'
      endcase

      if settings.style_text_size_varriant == '02'
        assign style_text_size_varriant = 'size_varriant_style_2'
      endif
    -%}
    {% unless template contains 'index' or template contains 'collection' or template contains 'product' %}
      {% render 'shogun-head' %}
    {% endunless %}
    <script
      async
      defer
      type="text/javascript"
      src="https://static.klaviyo.com/onsite/js/klaviyo.js?company_id=XAqg2H"
    ></script>

    <script async src="https://www.googletagmanager.com/gtag/js?id=G-PG7B620QJE"></script>
    <script type="text/javascript"> (function(funnel) {var deferredEvents = [];window.funnelytics = {events: {trigger: function (name, attributes, callback, opts) {deferredEvents.push({name: name, attributes: attributes, callback: callback, opts: opts});}}};var insert = document.getElementsByTagName('script')[0],script = document.createElement('script');script.addEventListener('load', function() {window.funnelytics.init(funnel, true, deferredEvents, {});});script.src = 'https://cdn.funnelytics.io/track-v3.js';script.type = 'text/javascript';script.async = true;insert.parentNode.insertBefore(script, insert);})('0cc5c89e-292b-43be-a6cb-42d74b1602ac'); </script>
  </head>

  <body
    class=" wellness-{{ template.name }}  template-{{ request.page_type }} dynamic-{{ template.suffix }}-template {{layout_body}} {{style_dots}} {{style_text_size_varriant}} {{style_arrows}} {{product_card_layout}} {% if settings.enable_button_disable_arrows %} enable_button_disable_arrows{% endif %}{% if settings.display_text_color_title %} enable_text_color_title{% if settings.style_text_color_varriant == '02' %} style_2_text_color_varriant{% endif %}{% endif %}{% if settings.hide_compare_homepage %} hide_compare_homepage{% endif %} {{ quick_shop_type }}{% if settings.show_image_loading %} show_image_loading{% endif %}{% if settings.show_effect_close %} show_effect_close{% endif %}{% if settings.enable_layout_rtl and enable_iso_rtl %} layout_rtl{% endif %}{% if request.design_mode %} shopify-design-mode{% endif %}{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %}{% if settings.enable_following_cursor and settings.following_cursor_style == 'default' %} cursor-fixed__show{% endif %}{% unless settings.enable_currencies %} disable_currencies{% endunless %}{% if settings.enable_button_1_border_outside %} btn_1_br_outside{% endif %}{% if settings.enable_button_2_border_outside %} btn_2_br_outside{% endif %}{% if settings.enable_button_3_border_outside %} btn_3_br_outside{% endif %}{% if settings.show_price_percent %} show_price_percent{% endif %}{% if settings.show_wishlist_full_icon %} icon_wishlist_full{% endif %}{% if settings.discount_calculator_free_shipping == 'setup_shipping_delivery' %} setup_shipping_delivery{% endif %}"
    allow-transparency
  >
    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-W3L597KW"
        height="0"
        width="0"
        style="display:none;visibility:hidden"
      ></iframe
    ></noscript>
    <!-- End Google Tag Manager (noscript) -->

    <div class="body-content-wrapper">
      <a class="skip-to-content-link button visually-hidden" href="#MainContent">
        {{- 'accessibility.skip_to_text' | t -}}
      </a>
      {% render 'preload-screen' %}
      {% sections 'header-group' %}
      {% render 'wrapper-header' %}

      {%- if settings.layout_body == 'boxed' -%}
        <div class="wrapper-hasbanner-adv">
      {%- endif -%}
      {% render 'halo-banner-adv-left' %}
      {% render 'halo-banner-adv-right' %}
      <main id="MainContent" class="wrapper-body content-for-layout focus-none" role="main" tabindex="-1">
        {{ content_for_layout }}
      </main>
      {%- if settings.layout_body == 'boxed' -%}
        </div>
      {%- endif -%}

      <div class="wrapper-footer">{% sections 'footer-group' %}</div>

      {% section 'halo-toolbar-mobile' %}

      <ul hidden>
        <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      </ul>

      {% render 'global-script-2' %}
    </div>
    {% render 'halo-popup' %}

    {%- if settings.enable_view_documentation or settings.enable_promotion -%}
      {% render 'theme-editor-notification' %}
    {%- endif -%}

    {%- if settings.use_custom_js -%}
      {{ 'custom.js' | asset_url | script_tag }}
    {%- endif -%}

    {% comment %} Font awesome {% endcomment %}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

    <div class="background-overlay">
      {%- if settings.show_effect_close -%}
        <div class="background-cursor-wrapper">
          <div class="background-cursor-wrapper_outer">
            <div class="background-cursor-wrapper_inner">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="20" height="20">
                <g class="nc-icon-wrapper" fill="#ffffff" transform="translate(0.5, 0.5)"><line fill="none" stroke-width="6" x1="46" y1="2" x2="2" y2="46"/> <line fill="none" stroke-width="6" x1="46" y1="46" x2="2" y2="2"/></g>
              </svg>
            </div>
          </div>
        </div>
      {%- endif -%}
    </div>

    {% render 'halo-sidebar' %}

    {%- if settings.enable_following_cursor -%}
      {% render 'cursor-fixed', style_cursor: settings.following_cursor_style %}
    {%- endif -%}

    {% if settings.enable_currencies and settings.currency_type == 'auto_currencies' %}
      {% render 'halo-currency-js' %}
    {% endif %}
  {% style %}
    {% if template.suffix == 'Product-page-3.O' %}
.productView-nav.style-1 .slick-dots{
 display:none !important;
      }
                  {% else %}
       .dynamic--template .productView-nav .slick-dots{
    display:none !important;
}
                  {% endif %}
    {% endstyle %}

    <script>
  document.addEventListener("DOMContentLoaded", function() {
    if (window.location.href.includes("collections")) {
      var style = document.createElement("style");
      style.innerHTML = `
        .sealsubs-target-element.sealsubs-full[data-seal-ac],
        .sealsubs-target-element.sealsubs-full[data-seal-in] {
          display: none !important;
        }
      `;
      document.head.appendChild(style);
    }
  });
</script>

<!-- 🧠 AI Chatbot Integration -->
<style>
  /* Floating Chat Icon */
  #ai-chat-button {
    position: fixed;
    bottom: 24px;
    right: 24px;
    width: 60px;
    height: 60px;
    background-color: #086B92;
    border-radius: 50%;
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 9999;
    transition: transform 0.2s ease;
  }

  #ai-chat-button:hover {
    transform: scale(1.1);
  }

  #ai-chat-button img {
    width: 35px;
    height: 35px;
    object-fit: contain;
    border-radius: 20px;
  }

  /* Chat Window */
  #ai-chat-window {
    position: fixed;
    bottom: 100px;
    right: 24px;
    width: 400px;
    height: 500px;
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 4px 24px rgba(0,0,0,0.25);
    overflow: hidden;
    display: none;
    flex-direction: column;
    z-index: 9999;
  }

  #ai-chat-window iframe {
    width: 100%;
    height: 100%;
    border: none;
  }

  /* Close button */
  #ai-chat-close {
    position: absolute;
    top: 8px;
    right: 12px;
    font-size: 22px;
    color: red;
    cursor: pointer;
    z-index: 10000;
    background: white;
    border-radius: 8px;
    padding: 6px 10px;
}

  /* Mobile Responsive */
  @media (max-width: 600px) {
    #ai-chat-window {
      width: 90%;
      height: 70%;
      left: 5%;
      bottom: 80px;
    }
  }
</style>

<!-- Floating Chat Icon -->
<div id="ai-chat-button" title="Chat with us">
  <!-- AI logo icon -->
  <img src="https://static.vecteezy.com/system/resources/previews/010/518/719/non_2x/artificial-intelligence-ai-processor-chip-icon-symbol-for-graphic-design-logo-website-social-media-mobile-app-ui-illustration-vector.jpg" alt="AI Assistant" />
</div>

<!-- Chat Window -->
<div id="ai-chat-window">
  <span id="ai-chat-close">&times;</span>
  
  <!-- Embedded Dummy Chatbot -->
  <div id="ai-chat-content">
    <div id="ai-chat-header">
      <h3>Wellness AI Assistant</h3>
      <p>We're here to help!</p>
    </div>
    <div id="ai-chat-messages"></div>
    <div id="ai-chat-input-container">
      <input type="text" id="ai-chat-input" placeholder="Type your message..." />
      <button id="ai-chat-send">Send</button>
    </div>
  </div>
</div>

<style>
  #ai-chat-content {
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 100%;
  }

  #ai-chat-header {
    background: linear-gradient(135deg, #086B92 0%, #0a8ab8 100%);
    color: white;
    padding: 20px;
    text-align: center;
  }

  #ai-chat-header h3 {
    margin: 0 0 5px 0;
    font-size: 22px;
    font-weight: 600;
    color: white;
  }

  #ai-chat-header p {
    margin: 0;
    font-size: 12px;
    opacity: 0.9;
    color: white;
  }

  #ai-chat-messages {
    flex: 1;
    overflow-y: auto;
    padding: 20px;
    background: #f5f5f5;
  }

  .chat-message {
    margin-bottom: 15px;
    display: flex;
    align-items: flex-start;
    animation: fadeIn 0.3s ease;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .chat-message.bot {
    justify-content: flex-start;
  }

  .chat-message.user {
    justify-content: flex-end;
  }

  .message-bubble {
    max-width: 75%;
    padding: 12px 16px;
    border-radius: 18px;
    word-wrap: break-word;
  }

  .chat-message.bot .message-bubble {
    background: white;
    color: #333;
    border-bottom-left-radius: 4px;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
  }

  .chat-message.user .message-bubble {
    background: #086B92;
    color: white;
    border-bottom-right-radius: 4px;
  }

  #ai-chat-input-container {
    display: flex;
    padding: 15px;
    background: white;
    border-top: 1px solid #e0e0e0;
  }

  #ai-chat-input {
    flex: 1;
    padding: 10px 15px;
    border: 1px solid #ddd;
    border-radius: 20px;
    outline: none;
    font-size: 14px;
  }

  #ai-chat-input:focus {
    border-color: #086B92;
  }

  #ai-chat-send {
    margin-left: 10px;
    padding: 10px 20px;
    background: #086B92;
    color: white;
    border: none;
    border-radius: 20px;
    cursor: pointer;
    font-weight: 600;
    transition: background 0.2s;
  }

  #ai-chat-send:hover {
    background: #0a8ab8;
  }

  .typing-indicator {
    display: flex;
    padding: 12px 16px;
    background: white;
    border-radius: 18px;
    border-bottom-left-radius: 4px;
    width: 60px;
  }

  .typing-indicator span {
    height: 8px;
    width: 8px;
    background: #086B92;
    border-radius: 50%;
    display: inline-block;
    margin: 0 2px;
    animation: typing 1.4s infinite;
  }

  .typing-indicator span:nth-child(2) {
    animation-delay: 0.2s;
  }

  .typing-indicator span:nth-child(3) {
    animation-delay: 0.4s;
  }

  @keyframes typing {
    0%, 60%, 100% { transform: translateY(0); }
    30% { transform: translateY(-10px); }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const chatBtn = document.getElementById("ai-chat-button");
    const chatWindow = document.getElementById("ai-chat-window");
    const chatClose = document.getElementById("ai-chat-close");
    const chatMessages = document.getElementById("ai-chat-messages");
    const chatInput = document.getElementById("ai-chat-input");
    const chatSend = document.getElementById("ai-chat-send");

    // ⚙️ CONFIGURE YOUR API ENDPOINT HERE
    const API_ENDPOINT = "https://your-api.vercel.app/api/chat"; // Replace with your Node.js API URL
    
    // Conversation history for context
    let conversationHistory = [];

    // Show/hide chat
    chatBtn.addEventListener("click", () => {
      chatWindow.style.display = "flex";
      chatBtn.style.display = "none";
      
      // Send welcome message if chat is empty
      if (chatMessages.children.length === 0) {
        setTimeout(() => {
          addMessage("bot", "Hello! 👋 Welcome to our store. How can I help you today?");
        }, 500);
      }
    });

    chatClose.addEventListener("click", () => {
      chatWindow.style.display = "none";
      chatBtn.style.display = "flex";
    });

    // Add message to chat
    function addMessage(type, text) {
      const messageDiv = document.createElement("div");
      messageDiv.className = `chat-message ${type}`;
      
      const bubbleDiv = document.createElement("div");
      bubbleDiv.className = "message-bubble";
      bubbleDiv.textContent = text;
      
      messageDiv.appendChild(bubbleDiv);
      chatMessages.appendChild(messageDiv);
      
      // Scroll to bottom
      chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // Show typing indicator
    function showTyping() {
      const typingDiv = document.createElement("div");
      typingDiv.className = "chat-message bot";
      typingDiv.id = "typing-indicator";
      
      const indicator = document.createElement("div");
      indicator.className = "typing-indicator";
      indicator.innerHTML = "<span></span><span></span><span></span>";
      
      typingDiv.appendChild(indicator);
      chatMessages.appendChild(typingDiv);
      chatMessages.scrollTop = chatMessages.scrollHeight;
      
      return typingDiv;
    }

    // Call your AI API
    async function callAIAPI(userMessage) {
      try {
        const response = await fetch(API_ENDPOINT, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            message: userMessage,
            history: conversationHistory, // Send conversation context
            shopDomain: "{{ shop.permanent_domain }}", // Shopify store context
          }),
        });

        if (!response.ok) {
          throw new Error(`API Error: ${response.status}`);
        }

        const data = await response.json();
        return data.reply || data.message || data.response || "I'm here to help!";
      } catch (error) {
        console.error("AI API Error:", error);
        return "Sorry, I'm having trouble connecting right now. Please try again in a moment.";
      }
    }

    // Send message
    async function sendMessage() {
      const message = chatInput.value.trim();
      
      if (message === "") return;
      
      // Disable input while processing
      chatInput.disabled = true;
      chatSend.disabled = true;
      
      // Add user message
      addMessage("user", message);
      chatInput.value = "";
      
      // Add to conversation history
      conversationHistory.push({ role: "user", content: message });
      
      // Show typing indicator
      const typing = showTyping();
      
      // Call your AI API
      const botReply = await callAIAPI(message);
      
      // Remove typing indicator
      typing.remove();
      
      // Add bot response
      addMessage("bot", botReply);
      
      // Add to conversation history
      conversationHistory.push({ role: "assistant", content: botReply });
      
      // Keep only last 10 messages in history to avoid payload size issues
      if (conversationHistory.length > 20) {
        conversationHistory = conversationHistory.slice(-20);
      }
      
      // Re-enable input
      chatInput.disabled = false;
      chatSend.disabled = false;
      chatInput.focus();
    }

    // Send on button click
    chatSend.addEventListener("click", sendMessage);

    // Send on Enter key
    chatInput.addEventListener("keypress", (e) => {
      if (e.key === "Enter") {
        sendMessage();
      }
    });
  });
</script>
                
  </body>
</html>
